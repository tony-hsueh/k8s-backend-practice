name: Cleanup Expired GKE Resources

on:
  schedule:
    - cron: "0 16 * * *" # 每天 UTC 16:00 執行，台灣凌晨0點
  workflow_dispatch: # 允許手動觸發

env:
  REGION: asia-east2
  PROJECT_ID: second-academy-473511-q2
  EXPIRY_SECONDS: 300 # 資源過期時間，單位為秒 (5 分鐘)

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: hello-world-cluster
          location: ${{ env.REGION }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Cleanup expired resources
        env:
          EXPIRY_SECONDS: ${{ env.EXPIRY_SECONDS }}
        run: |
          CURRENT_TIME=$(date +%s)

          echo "開始清理過期資源..."
          echo "過期時間設定: ${EXPIRY_SECONDS} 秒"

          # 獲取所有 deployments
          deployments=$(kubectl get deployments -o json | jq -r '.items[] | select(.metadata.name != "nginx-gateway") | {name: .metadata.name, creationTimestamp: .metadata.creationTimestamp} | @base64')

          for deployment in $deployments; do
            _jq() {
              echo ${deployment} | base64 --decode | jq -r ${1}
            }

            DEPLOY_NAME=$(_jq '.name')
            CREATE_TIME=$(_jq '.creationTimestamp')
            
            # 轉換創建時間為 Unix 時間戳
            CREATE_TIMESTAMP=$(date -d "$CREATE_TIME" +%s 2>/dev/null)
            
            if [ -z "$CREATE_TIMESTAMP" ]; then
              echo "無法解析 $DEPLOY_NAME 的創建時間，跳過"
              continue
            fi

            # 計算存在時間
            AGE=$((CURRENT_TIME - CREATE_TIMESTAMP))
            
            echo "Deployment: $DEPLOY_NAME, 已存在: ${AGE} 秒"

            # 檢查是否過期
            if [ $AGE -ge $EXPIRY_SECONDS ]; then
              echo "刪除過期的資源: $DEPLOY_NAME (已存在 ${AGE} 秒)"
              
              # 刪除 deployment
              kubectl delete deployment $DEPLOY_NAME --ignore-not-found=true
              echo "已刪除 deployment: $DEPLOY_NAME"
              
              # 刪除對應的 service
              kubectl delete service ${DEPLOY_NAME}-svc --ignore-not-found=true
              echo "已刪除 service: ${DEPLOY_NAME}-svc"
              
              # 刪除對應的 configmap
              kubectl delete configmap $DEPLOY_NAME --ignore-not-found=true
              echo "已刪除 configmap: $DEPLOY_NAME"
              
              echo "完成刪除 $DEPLOY_NAME 的所有資源"
            else
              echo "$DEPLOY_NAME 尚未過期"
            fi
          done

          echo "清理作業完成！"
